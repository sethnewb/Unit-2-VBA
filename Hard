Sub Hard()
' Homework Answer for the Hard Portion
' Includes full Workbook Loop

' Turn off Screen Updates for faster run time
    Application.ScreenUpdating = False

' WkSh is the worksheet
'   Used in full Workbook Loop
' LRow is the last row used in Column A
' LRow2 is the last row used in Column I after all
'   Ticker Information Is generated
' NxRow is the next row to be used in Column I
' LOpen is the opening price found in Column C
' HClose is the closing price found in Column F
' YrChange is the Monetary Change between Open Price
'   and the closing price
' PrChange is the Percent Change between Open Price
'   and the closing price
' TlVolume is the running total in Column G
'   Resets after ticker symbol change
' IncTicker is the Ticker Symbol with Greatest increase
' DecTicker is the Ticker Symbol with the Greatest decrease
' GrVlTicker is the Ticker Symbol with the Greatest volume
' IncValue is the greatest increase value
' DecValue is the greatest decrease value
' GrVlvalue is the greatest volume value

    Dim WkSh As Worksheet
    Dim LRow As Long
    Dim LRow2 As Long
    Dim NxRow As Long
    Dim LOpen As Double
    Dim HClose As Double
    Dim YrChange As Double
    Dim PrChange As Double
    Dim TlVolume As Double
    Dim IncTicker As String
    Dim DecTicker As String
    Dim GrVlTicker As String
    Dim IncValue As Double
    Dim DecValue As Double
    Dim GrVlValue As Double

    For Each WkSh In ThisWorkbook.Sheets

' Ensure that every worksheet is in Alphabetical and Chronological order
        WkSh.Columns("A:G").Sort Key1:=WkSh.Range("B1"), _
        Order1:=xlAscending, Header:=xlYes
        WkSh.Columns("A:G").Sort Key1:=WkSh.Range("A1"), _
        Order1:=xlAscending, Header:=xlYes

' Setting all variables that need to be set before Loops
        LRow = WkSh.Cells(Rows.Count, 1).End(xlUp).Row
        NxRow = 1
        TlVolume = 0
        LOpen = WkSh.Range("C2")

' Add Headers
        WkSh.Range("I1") = "Ticker"
        WkSh.Range("J1") = "Yearly Change"
        WkSh.Range("K1") = "Percent Change"
        WkSh.Range("L1") = "Total Stock Volume"
    
' Headers for the Hard Portion
        WkSh.Range("P1") = "Ticker"
        WkSh.Range("Q1") = "Value"
        WkSh.Range("O2") = "Greatest % Increase"
        WkSh.Range("O3") = "Greatest % Decrease"
        WkSh.Range("O4") = "Greatest Total Volume"
    
' For Loop that loops down Column A
'   If the next cell is the same as current cell
'       Add volume in Column G to Total Volume
'   If the next cell is not the same as current cell
'       Get closing price from Column F
'       Add volume in Column G to Total Volume
'       Find Difference between Closing and Opening Price
'       Find Percent Change between Opening and Closing Price
'       Add 1 to Next Row
'       Ticker Symbol
'       Year Change
'       Percent Change
'       Total Volume
'       Reset Total Volume to 0
'       Set Opening Price to Opening Price of the next
'           Ticker Symbol
    
        For TickerList = 2 To LRow
            If WkSh.Cells(TickerList, 1) = WkSh.Cells(TickerList + 1, 1) Then
                TlVolume = TlVolume + WkSh.Cells(TickerList, 7)
            Else
                HClose = WkSh.Cells(TickerList, 6)
                TlVolume = TlVolume + WkSh.Cells(TickerList, 7)
                YrChange = HClose - LOpen
                On Error Resume Next  ' If LOpen is 0 there will be an error
                PrChange = (HClose - LOpen) / LOpen
                If Err.Number <> 0 Then
                    PrChange = 0
                End If
                NxRow = NxRow + 1
                WkSh.Cells(NxRow, 9) = WkSh.Cells(TickerList, 1)
                WkSh.Cells(NxRow, 10) = YrChange
                WkSh.Cells(NxRow, 11) = PrChange
                WkSh.Cells(NxRow, 12) = TlVolume
                TlVolume = 0
                LOpen = WkSh.Cells(TickerList + 1, 3)
            End If
        Next TickerList
    
' Summary has been generated, Find last row of Summary
        LRow2 = WkSh.Cells(Rows.Count, 9).End(xlUp).Row
        
' Variables for the Hard Portion
        IncTicker = WkSh.Range("I2")
        DecTicker = WkSh.Range("I2")
        GrVlTicker = WkSh.Range("I2")
        IncValue = WkSh.Range("K2")
        DecValue = WkSh.Range("K2")
        GrVlValue = WkSh.Range("L2")
        
' For Loop to Find Greatest Increase
        For ShortList = 2 To LRow2
            If WkSh.Cells(ShortList + 1, 11) > IncValue And _
            WkSh.Cells(ShortList + 1, 11) <> "" Then
                IncValue = WkSh.Cells(ShortList + 1, 11)
                IncTicker = WkSh.Cells(ShortList + 1, 9)
            End If
        Next ShortList
' For Loop to Find Greatest Decrease
        For ShortList = 2 To LRow2
            If WkSh.Cells(ShortList + 1, 11) < DecValue And _
            WkSh.Cells(ShortList + 1, 11) <> "" Then
                DecValue = WkSh.Cells(ShortList + 1, 11)
                DecTicker = WkSh.Cells(ShortList + 1, 9)
            End If
        Next ShortList
' For Loop to Find Greatest Total Volume
        For ShortList = 2 To LRow2
            If WkSh.Cells(ShortList + 1, 12) > GrVlValue And _
            WkSh.Cells(ShortList + 1, 12) <> 0 Then
                GrVlValue = WkSh.Cells(ShortList + 1, 12)
                GrVlTicker = WkSh.Cells(ShortList + 1, 9)
            End If
        Next ShortList

' Paste All Values just found in the loops to Proper cells
        WkSh.Range("P2") = IncTicker
        WkSh.Range("P3") = DecTicker
        WkSh.Range("P4") = GrVlTicker
        WkSh.Range("Q2") = IncValue
        WkSh.Range("Q3") = DecValue
        WkSh.Range("Q4") = GrVlValue
    
' Clean up and Formatting
'   Change Column J cell Background Color to red or green
'       based on positive or negative
        For ShortList = 2 To LRow2
            If WkSh.Cells(ShortList, 10) <= 0 Then
                WkSh.Cells(ShortList, 10).Interior.Color = RGB(255, 0, 0)
            Else
                WkSh.Cells(ShortList, 10).Interior.Color = RGB(0, 255, 0)
            End If
        Next ShortList
        
'   Format necessary cells and AutoFit all Cells
        WkSh.Range("J2:J" & LRow2).NumberFormat = "0.000000000"
        WkSh.Range("K2:K" & LRow2).NumberFormat = "0.00%"
        WkSh.Range("Q2:Q3").NumberFormat = "0.00%"
        WkSh.Cells.Columns.AutoFit

    Next WkSh
    
' Turn Screen Updating Back on
    Application.ScreenUpdating = True
    
End Sub
